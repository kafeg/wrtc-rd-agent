on:
  push:
    branches:
      - main
  release:
    types: [ created ]
name: Build wrtcrd
jobs:
  build-wrtcrd:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - name: Dump env
        run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "Linux"
          sudo apt-get install -y libxtst-dev p7zip-full
          go build -tags "h264enc" cmd/main.go
          if [ "$GITHUB_EVENT_NAME" == "release" ]; then
            set -x
            mv main wrtcrd
            ASSET=wrtcrd-x64-linux.zip
            7za a -tzip $ASSET wrtcrd
            # Token should have permission repo -> public_repo (https://stackoverflow.com/a/37632339)
            curl -H "Authorization: token ${{ secrets.WRTCRD_TOKEN }}" -H "Content-Type: $(file -b --mime-type $ASSET)" --data-binary @$ASSET \
                    "https://uploads.github.com/repos/kafeg/wrtcrd/releases/${{ github.event.release.id }}/assets?name=$(basename $ASSET)"
          fi
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: |
          echo "macOS"
          go build -tags "h264enc" cmd/main.go
          if [ "$GITHUB_EVENT_NAME" == "release" ]; then
            set -x
            mv main wrtcrd
            ASSET=wrtcrd-x64-osx.zip
            7za a -tzip $ASSET wrtcrd
            curl -H "Authorization: token ${{ secrets.WRTCRD_TOKEN }}" -H "Content-Type: $(file -b --mime-type $ASSET)" --data-binary @$ASSET \
              "https://uploads.github.com/repos/kafeg/wrtcrd/releases/${{ github.event.release.id }}/assets?name=$(basename $ASSET)"
          fi
      - name: Build for Windows
        shell: bash
        if: matrix.os == 'windows-latest'
        run: |
          echo "Windows"
          go build -tags "h264enc" cmd/main.go
          if [ "$GITHUB_EVENT_NAME" == "release" ]; then
            set -x
            mv main.exe wrtcrd.exe
            ASSET=wrtcrd-x64-windows.zip
            7z a -tzip $ASSET wrtcrd.exe
            curl -H "Authorization: token ${{ secrets.WRTCRD_TOKEN }}" -H "Content-Type: $(file -b --mime-type $ASSET)" --data-binary @$ASSET \
              "https://uploads.github.com/repos/kafeg/wrtcrd/releases/${{ github.event.release.id }}/assets?name=$(basename $ASSET)"
          fi
